@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div id="marquees-parent" class="text-center mb-5">
    <marquee id="the-best-html-tag-ever" scrollamount="20" class="display-4">This site has HSTS!!! Boo yeah!</marquee>
</div>

<div class="row justify-content-center">
    <div class="col-2 align-self-center">
        <input id="change-speed-input" class="form-control w-75" value="20" type="number"/>
        Change speed
    </div>
</div>

<script>
    document.querySelector('#change-speed-input').addEventListener('change', function(event) {
        const marquee = document.querySelector('#the-best-html-tag-ever');
        const marqueeParent = document.querySelector('#marquees-parent');
        // This is gross, but marquee's don't natively support changing the scroll amount on the fly, so have to completely re-render it.
        marqueeParent.outerHTML = marqueeParent.outerHTML.replace(`scrollamount="${marquee.scrollAmount}"`, `scrollamount="${event.target.value}"`);
    });
</script>